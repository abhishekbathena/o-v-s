{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\abhi\\\\Downloads\\\\v\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\abhi\\\\Downloads\\\\v\\\\react\\\\src\\\\components\\\\Time.jsx\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Time = function Time(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  useEffect(_s(function () {\n    _s();\n\n    var _useState = useState(second),\n        _useState2 = _slicedToArray(_useState, 2),\n        hou = _useState2[0],\n        sethou = _useState2[1];\n\n    var countDownDate = new Date(props.month + \"\" + props.Datee + \" \" + \",\" + \" \" + props.year + \" \" + props.hours + \":\" + props.minutes + \":\" + 29).getTime();\n    var x = setInterval(function () {\n      var now = new Date().getTime();\n      var distance = countDownDate - now;\n      var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n      var seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n      if (distance < 0) {\n        clearInterval(x);\n        document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\n      } else {}\n    }, 1000);\n  }, \"TjrXUsubMRLrZQIBS+2+p01d8EY=\"));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, _this);\n};\n\n_s2(Time, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Time;\nexport default Time;\n\nvar _c;\n\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"sources":["C:/Users/abhi/Downloads/v/react/src/components/Time.jsx"],"names":["React","useEffect","Time","props","useState","second","hou","sethou","countDownDate","Date","month","Datee","year","hours","minutes","getTime","x","setInterval","now","distance","days","Math","floor","seconds","clearInterval","document","getElementById","innerHTML"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,IAAMC,IAAI,GAAC,SAALA,IAAK,CAAAC,KAAK,EAAE;AAAA;;AAAA;;AAGlBF,EAAAA,SAAS,IAAC,YAAI;AAAA;;AACZ,oBAAsBG,QAAQ,CAACC,MAAD,CAA9B;AAAA;AAAA,QAAOC,GAAP;AAAA,QAAYC,MAAZ;;AAEF,QAAIC,aAAa,GAAG,IAAIC,IAAJ,CAASN,KAAK,CAACO,KAAN,GAAY,EAAZ,GAAeP,KAAK,CAACQ,KAArB,GAA2B,GAA3B,GAA+B,GAA/B,GAAmC,GAAnC,GAAuCR,KAAK,CAACS,IAA7C,GAAkD,GAAlD,GAAsDT,KAAK,CAACU,KAA5D,GAAkE,GAAlE,GAAsEV,KAAK,CAACW,OAA5E,GAAoF,GAApF,GAAwF,EAAjG,EAAqGC,OAArG,EAApB;AAEA,QAAIC,CAAC,GAAGC,WAAW,CAAC,YAAW;AAE7B,UAAIC,GAAG,GAAG,IAAIT,IAAJ,GAAWM,OAAX,EAAV;AAEA,UAAII,QAAQ,GAAGX,aAAa,GAAGU,GAA/B;AAGA,UAAIE,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAX;AACA,UAAIN,KAAK,GAAGQ,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CAAX,CAAZ;AACA,UAAIL,OAAO,GAAGO,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAd;AACA,UAAII,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAd;;AAIA,UAAIA,QAAQ,GAAG,CAAf,EAAkB;AAChBK,QAAAA,aAAa,CAACR,CAAD,CAAb;AACAS,QAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4C,SAA5C;AACD,OAHD,MAII,CAEH;AACF,KArBkB,EAqBhB,IArBgB,CAAnB;AAuBC,GA5BQ,kCAAT;AA8BI,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAtCD;;IAAMzB,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nconst Time=props=>{\r\n\r\n\r\nuseEffect(()=>{\r\n  const [hou, sethou] = useState(second)\r\n  \r\nvar countDownDate = new Date(props.month+\"\"+props.Datee+\" \"+\",\"+\" \"+props.year+\" \"+props.hours+\":\"+props.minutes+\":\"+29).getTime();\r\n\r\nvar x = setInterval(function() {\r\n\r\n  var now = new Date().getTime();\r\n\r\n  var distance = countDownDate - now;\r\n    \r\n\r\n  var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n  \r\n\r\n  if (distance < 0) {\r\n    clearInterval(x);\r\n    document.getElementById(\"demo\").innerHTML = \"EXPIRED\";\r\n  }\r\n  else{\r\n    \r\n  }\r\n}, 1000);\r\n\r\n})\r\n\r\n    return(\r\n        <div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Time;"]},"metadata":{},"sourceType":"module"}