{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\abhi\\\\Downloads\\\\v\\\\react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\abhi\\\\Downloads\\\\v\\\\react\\\\src\\\\components\\\\Time.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Time = function Time(props) {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      hou = _useState2[0],\n      sethou = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      m = _useState4[0],\n      setm = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sd = _useState6[0],\n      setsd = _useState6[1];\n\n  var countDownDate = new Date(props.month + \"\" + props.Datee + \" \" + \",\" + \" \" + props.year + \" \" + props.hours + \":\" + props.minutes + \":\" + 29).getTime();\n  var x = setInterval(function () {\n    var now = new Date().getTime();\n    var distance = countDownDate - now;\n    var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n    var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n    var seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n    if (distance < 0) {\n      clearInterval(x);\n    } else {\n      setsd(seconds);\n      sethou(hours);\n      setm(minutes);\n    }\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [hou, \":\", sd]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Time, \"22ftRa4aT0wUtX/oNLFJi42AsjM=\");\n\n_c = Time;\nexport default Time;\n\nvar _c;\n\n$RefreshReg$(_c, \"Time\");","map":{"version":3,"sources":["C:/Users/abhi/Downloads/v/react/src/components/Time.jsx"],"names":["React","useEffect","useState","Time","props","hou","sethou","m","setm","sd","setsd","countDownDate","Date","month","Datee","year","hours","minutes","getTime","x","setInterval","now","distance","days","Math","floor","seconds","clearInterval"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;;;AAGA,IAAMC,IAAI,GAAC,SAALA,IAAK,CAAAC,KAAK,EAAE;AAAA;;AAChB,kBAAsBF,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOG,GAAP;AAAA,MAAYC,MAAZ;;AACA,mBAAkBJ,QAAQ,CAAC,EAAD,CAA1B;AAAA;AAAA,MAAOK,CAAP;AAAA,MAAUC,IAAV;;AACA,mBAAoBN,QAAQ,CAAC,EAAD,CAA5B;AAAA;AAAA,MAAOO,EAAP;AAAA,MAAWC,KAAX;;AAIF,MAAIC,aAAa,GAAG,IAAIC,IAAJ,CAASR,KAAK,CAACS,KAAN,GAAY,EAAZ,GAAeT,KAAK,CAACU,KAArB,GAA2B,GAA3B,GAA+B,GAA/B,GAAmC,GAAnC,GAAuCV,KAAK,CAACW,IAA7C,GAAkD,GAAlD,GAAsDX,KAAK,CAACY,KAA5D,GAAkE,GAAlE,GAAsEZ,KAAK,CAACa,OAA5E,GAAoF,GAApF,GAAwF,EAAjG,EAAqGC,OAArG,EAApB;AAEA,MAAIC,CAAC,GAAGC,WAAW,CAAC,YAAW;AAE7B,QAAIC,GAAG,GAAG,IAAIT,IAAJ,GAAWM,OAAX,EAAV;AAEA,QAAII,QAAQ,GAAGX,aAAa,GAAGU,GAA/B;AAGA,QAAIE,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAAX;AACA,QAAIN,KAAK,GAAGQ,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CAAX,CAAZ;AACA,QAAIL,OAAO,GAAGO,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,IAAiC,OAAO,EAAxC,CAAX,CAAd;AACA,QAAII,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYH,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC,CAAd;;AAIA,QAAIA,QAAQ,GAAG,CAAf,EAAkB;AAChBK,MAAAA,aAAa,CAACR,CAAD,CAAb;AAED,KAHD,MAII;AACFT,MAAAA,KAAK,CAACgB,OAAD,CAAL;AACApB,MAAAA,MAAM,CAACU,KAAD,CAAN;AACAR,MAAAA,IAAI,CAACS,OAAD,CAAJ;AACD;AACF,GAvBkB,EAuBhB,IAvBgB,CAAnB;AA2BI,sBACI;AAAA,2BACI;AAAA,iBAAMZ,GAAN,OAAcI,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAKH,CAzCD;;GAAMN,I;;KAAAA,I;AA2CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect ,useState} from \"react\";\r\n\r\n\r\nconst Time=props=>{\r\n  const [hou, sethou] = useState('')\r\n  const [m, setm] = useState('')\r\n  const [sd, setsd] = useState('')\r\n\r\n\r\n  \r\nvar countDownDate = new Date(props.month+\"\"+props.Datee+\" \"+\",\"+\" \"+props.year+\" \"+props.hours+\":\"+props.minutes+\":\"+29).getTime();\r\n\r\nvar x = setInterval(function() {\r\n\r\n  var now = new Date().getTime();\r\n\r\n  var distance = countDownDate - now;\r\n    \r\n\r\n  var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n  \r\n\r\n  if (distance < 0) {\r\n    clearInterval(x);\r\n    \r\n  }\r\n  else{\r\n    setsd(seconds);\r\n    sethou(hours);\r\n    setm(minutes);\r\n  }\r\n}, 1000);\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <div>{hou}:{}{sd}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Time;"]},"metadata":{},"sourceType":"module"}